@model Services.Data.RecipeData

@{
	ViewBag.Title = "Edit recipe " + Model.Title;
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<script>
	function validateForm(event) {
		var titleInput = document.getElementById('Title');
		var isValid = true;
		// Check condition for Title field
		if (titleInput.value.trim() === '') {
			titleInput.classList.add('invalid');
			isValid = false;
		}
		if (!isValid) {
			event.preventDefault(); // Prevent submit event
			alert('Please fill in all required fields.'); // Show error message
		}
	}
	function replaceLineBreaks() {
		var description = document.getElementById('Description');
		description.value = description.value.replace(/\r?\n/g, '\n');
	}

	$(function () {
		$("#sortable-container").sortable({
			handle: ".handle",
			update: function (event, ui) {
				// Get the list of steps after sorting
				var steps = [];
				$(".step").each(function () {
					var stepId = $(this).find("textarea").attr("id");
					var direction = $(this).find("textarea").val();
					steps.push({
						stepId: stepId,
						direction: direction
					});
				});

				// Send the list of steps to the server for update
				$.ajax({
					url: "/update-directions",
					method: "POST",
					data: { steps: JSON.stringify(steps) },
					success: function (response) {
						// Code to handle the response from the server
						console.log(response);
					},
					error: function (xhr, status, error) {
						// Error handling
						console.log(error);
					}
				});
			}
		}).disableSelection();
	});

</script>

<body>
	<div id="page-title" class="padding-tb-30px gradient-white">
		<div class="container">
			<ol class="breadcrumb opacity-5">
				<li><a href="@Url.Action("Index", "Home")">Home</a></li>
				<li><a href="@Url.Action("AddNewRecipe", "Recipe")">Add new Recipe</a></li>
			</ol>
			<h1 class="font-weight-300">Edit Recipe</h1>
		</div>
	</div>
	<form method="post" action="/Recipe/EditRecipe?@Model.RecipeId" enctype="multipart/form-data">
		@Html.HiddenFor(m => m.RecipeId, new { value=Model.RecipeId })
		<div class="container">
			<div class="margin-tb-20px full-width">
				<h4 class="padding-lr-10px padding-tb-10px background-white box-shadow border-radius-10">
					<i class="far fa-list-alt margin-right-10px text-main-color"></i>Basic Informations
				</h4>
				<div class="padding-10px padding-bottom-10px background-white border-radius-10">

					<div class="row">
						<div class="col-md-8">
							<div class="form-group margin-bottom-10px">
								<label><i class="far fa-list-alt margin-right-10px"></i> Recipe Title</label>
								@Html.TextBoxFor(m => m.Title, new { @class="form-control form-control-sm", placeholder="Give your recipe a title", required = "required" })
								@Html.ValidationMessageFor(m => m.Title)
							</div>
							<div class="margin-bottom-10px">
								<label><i class="far fa-list-alt margin-right-10px"></i> Description</label>
								@Html.TextAreaFor(m => m.Description, new { @class = "form-control recipe-textbox", placeholder = "Share the story behind your recipe and what makes it special.", @rows = "8", onblur = "replaceLineBreaks()" })

							</div>
						</div>
						<div class="col-md-4">
							<div class="formLayout__uploadContent form-group margin-bottom-10px">
								<div class="formLayoutPhotoUpload">
									<div class="formLayout__uploadLabel">
										<label>
											<i class="far fa-list-alt margin-right-10px"></i> Photo (optional)
										</label><br>
									</div>

									<div class=" js--uploadedImage">
										<!-- Display the uploaded image if needed -->
										<img src="@Model.Img" width="300px" class="margin-bottom-10px" />

										<label>Add more images?</label>
										<input type="file" id="photoUploadFile" name="files" multiple />
										@*@Html.TextBoxFor(m => m.MediaFiles, new { type = "file", multiple = "multiple", id = "photoUploadFile" })*@
										<span id="imageFormatError" class="text-danger" style="display: none;">
											<b>Invalid image format.</b><br> Only JPG, PNG, and GIF formats are allowed.
										</span>
									</div>

									<script>
										// JavaScript code to validate image format and clear input value on error
										var inputElement = document.getElementById("photoUploadFile");
										var imageFormatError = document.getElementById("imageFormatError");

										inputElement.addEventListener("change", function () {
											var file = this.files[0];
											var allowedFormats = ["image/jpeg", "image/png", "image/gif"];

											if (file && !allowedFormats.includes(file.type)) {
												// Display error message
												imageFormatError.style.display = "block";

												// Clear input value on error
												inputElement.value = "";
											} else {
												// Hide error message
												imageFormatError.style.display = "none";
											}
										});
									</script>

								</div>
							</div>
						</div>
					</div>
				</div>
			</div>

			<div class="margin-tb-20px full-width">
				<h4 class="padding-lr-10px padding-tb-10px background-white box-shadow border-radius-10">
					<i class="far fa-list-alt margin-right-10px text-main-color"></i>Ingredients
				</h4>
				<div class="padding-10px padding-bottom-10px background-white border-radius-10">
					<div class="margin-bottom-10px">
						<label><i class="far fa-flag margin-right-10px"></i> Edit multiple ingredients</label><br>
						<p>
							Paste your ingredient list here. Add one ingredient per line. Include the quantity (i.e. cups,
							tablespoons) and any special preparation (i.e. sifted, softened, chopped).
						</p>
						<textarea id="ingredients" name="IngredientsInput" class="form-control" rows="8">
							@for (int i = 0; i < Model.Ingredients.Count; i++)
							{
								@Model.Ingredients[i].IngredientName.Trim()
								@if (i < Model.Ingredients.Count - 1)
								{
									@Html.Raw("\n")
								}
							}
						</textarea>

					</div>
				</div>
			</div>
			<div class="margin-bottom-20px full-width">
				<h4 class="padding-lr-10px padding-tb-10px background-white box-shadow border-radius-10">
					<i class="far fa-list-alt margin-right-10px text-main-color"></i>Directions
				</h4>
				<div class="padding-10px padding-bottom-10px background-white border-radius-10">
					<div class="margin-bottom-10px">
						<label><i class="far fa-flag margin-right-10px"></i> Edit multiple steps</label><br>
						<p>
							Explain how to make your recipe, including oven temperatures, baking or cooking times, and
							pan sizes, etc. Use optional headers to organize the different parts of the recipe (i.e. Prep,
							Bake,
							Decorate).
						</p>
						<textarea id="directions" name="DirectionsInput" class="form-control" rows="8">
							@for (int i = 0; i < Model.Directions.Count; i++)
							{
								@Model.Directions[i].Direction1.Trim()
								@if (i < Model.Directions.Count - 1)
								{
									@Html.Raw("\n")
								}
							}
						</textarea>
					</div>
				</div>
			</div>
			<div class="form-group margin-bottom-20px">
				<div class="row">
					<div class="col-md-6">
						<div class="form-group margin-bottom-20px">
							<label><i class="far fa-flag margin-right-10px"></i> Tags</label>
							@*@Html.TextBoxFor(m => m.TagsInput, new { @class = "form-control", placeholder = "Enter a comma after each tag"})*@
							<input type="text" id="tagInputs" name="TagInputs" class="form-control"
								   value="@string.Join(", ", Model.Tags.Select(t => t.TagName.Trim()))" />

						</div>
					</div>

					<div class="col-md-6">
						<div class="form-group margin-bottom-20px">
							<label><i class="far fa-list-alt margin-right-10px"></i>Status</label>
							<p></p>
							<select name="Status" class="form-control">
								@if (Model.Status == "public")
								{
									<option value="public" selected="selected">Public</option>
									<option value="draft">Draft</option>
								}
								else
								{
									<option value="pending">Public</option>
									<option value="draft" selected="selected">Draft</option>
								}
							</select>

						</div>
					</div>
				</div>
			</div>
			<div class="text-center">
				<button type="submit" name="Action" value="save" class="btn btn-lg border-2 ba-1 text-white margin-bottom-80px border-radius-15 padding-15px box-shadow">
					Save
				</button>
				<button type="submit" name="Action" value="trash" class="btn btn-lg border-2 ba-1 text-white margin-bottom-80px border-radius-15 padding-15px box-shadow">
					Trash
				</button>

				<a href="@Url.Action("Index", "Home")" class="btn btn-lg border-2 ba-1 text-white margin-bottom-80px border-radius-15 padding-15px box-shadow">Cancel</a>
			</div>
		</div>
	</form>

</body>